

import random
import curses

def main(screen):
    curses.curs_set(0)
    screen_height, screen_width = screen.getmaxyx()
    window = curses.newwin(screen_height, screen_width, 0, 0)
    window.keypad(True)
    window.timeout(110)

    # initial snake position
    snake_x = screen_width // 4
    snake_y = screen_height // 2
    snake = [
        [snake_y, snake_x],
        [snake_y, snake_x - 1],
        [snake_y, snake_x - 2]
    ]

    # initial food
    food = [screen_height // 2, screen_width // 2]
    window.addch(food[0], food[1], curses.ACS_PI)

    key = curses.KEY_RIGHT

    while True:
        next_key = window.getch()
        if next_key != -1:
            key = next_key

        # collision with borders or itself
        if (snake[0][0] in [0, screen_height - 1] or
            snake[0][1] in [0, screen_width - 1] or
            snake[0] in snake[1:]):
            curses.endwin()
            quit()

        # new head position
        new_head = [snake[0][0], snake[0][1]]
        if key == curses.KEY_LEFT:
            new_head[1] -= 1
        elif key == curses.KEY_RIGHT:
            new_head[1] += 1
        elif key == curses.KEY_UP:
            new_head[0] -= 1
        elif key == curses.KEY_DOWN:
            new_head[0] += 1

        snake.insert(0, new_head)

        # check if snake eats food
        if snake[0] == food:
            food = None
            while food is None:
                nf = [
                    random.randint(1, screen_height - 2),
                    random.randint(1, screen_width - 2)
                ]
                food = nf if nf not in snake else None
            window.addch(food[0], food[1], curses.ACS_PI)
        else:
            tail = snake.pop()
            window.addch(tail[0], tail[1], ' ')

        window.addch(snake[0][0], snake[0][1], curses.ACS_CKBOARD)

curses.wrapper(main)

